import {fillerArray} from './fillerArray';

describe('fillerArray function', () => {
  it('should fill the array with the specified constant value', () => {
    const padValue = 0;
    const requiredSize = 5;
    const result = fillerArray(padValue, requiredSize);
    expect(result).toEqual([0, 0, 0, 0, 0]);
  });

  it('should fill the array with values generated by the provided function', () => {
    const padValue = (index: number) => index + 1;
    const requiredSize = 5;
    const result = fillerArray(padValue, requiredSize);
    expect(result).toEqual([1, 2, 3, 4, 5]);
  });

  it('should return an empty array if the required size is 0', () => {
    const padValue = 0;
    const requiredSize = 0;
    const result = fillerArray(padValue, requiredSize);
    expect(result).toEqual([]);
  });

  it('should handle a function returning constant values', () => {
    const padValue = (_: number) => 10;
    const requiredSize = 5;
    const result = fillerArray(padValue, requiredSize);
    expect(result).toEqual([10, 10, 10, 10, 10]);
  });

  it('should handle a function returning values based on index', () => {
    const padValue = (i: number) => i * 2;
    const requiredSize = 5;
    const result = fillerArray(padValue, requiredSize);
    expect(result).toEqual([0, 2, 4, 6, 8]);
  });
});
